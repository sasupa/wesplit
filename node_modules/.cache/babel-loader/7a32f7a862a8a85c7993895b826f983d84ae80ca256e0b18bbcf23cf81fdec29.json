{"ast":null,"code":"// ExpensePage.js\nimport React,{useEffect,useState}from\"react\";import{fetchGroups}from\"../../utils/apiUtils\";import{Container,Row,Col,Form,Button}from\"react-bootstrap\";import Footer from\"../../components/Footer/Footer\";import LoadingSpinner from\"../../components/LoadingSpinner/LoadingSpinner\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const GroupsPage=()=>{const[groups,setGroups]=useState([]);const[error,setError]=useState(null);const[loading,setLoading]=useState(true);// Added loading state\nuseEffect(()=>{fetchGroups().then(data=>{setGroups(data);setLoading(false);// Set loading to false when data is received\n}).catch(error=>{console.error(\"Fetching groups failed: \",error);setError(error.message);setLoading(false);// Set loading to false even when there's an error\n});},[]);// Handle form submission\nconst handleSubmit=event=>{event.preventDefault();// Add your form submission logic here\nconsole.log(\"Form submitted!\");};return/*#__PURE__*/_jsxs(Container,{className:\"py-5\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center mb-4\",children:\"Your Groups\"}),loading?/*#__PURE__*/_jsx(LoadingSpinner,{})// Show loading spinner when loading\n:error?/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]})// Show error message if there's an error\n:/*#__PURE__*/_jsx(\"div\",{children:groups.map(group=>/*#__PURE__*/_jsx(\"p\",{children:group.name},group.id)// Replace 'group.id' and 'group.name' with actual properties from your groups data\n)}),/*#__PURE__*/_jsx(Footer,{})]});};export default GroupsPage;","map":{"version":3,"names":["React","useEffect","useState","fetchGroups","Container","Row","Col","Form","Button","Footer","LoadingSpinner","jsx","_jsx","jsxs","_jsxs","GroupsPage","groups","setGroups","error","setError","loading","setLoading","then","data","catch","console","message","handleSubmit","event","preventDefault","log","className","children","map","group","name","id"],"sources":["/Users/sasu/Documents/GitHub/wesplit/src/pages/GroupsPage/GroupsPage.js"],"sourcesContent":["// ExpensePage.js\nimport React, { useEffect, useState } from \"react\";\nimport { fetchGroups } from \"../../utils/apiUtils\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport Footer from \"../../components/Footer/Footer\";\nimport LoadingSpinner from \"../../components/LoadingSpinner/LoadingSpinner\";\n\nconst GroupsPage = () => {\n  const [groups, setGroups] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true); // Added loading state\n\n  useEffect(() => {\n    fetchGroups()\n      .then((data) => {\n        setGroups(data);\n        setLoading(false); // Set loading to false when data is received\n      })\n      .catch((error) => {\n        console.error(\"Fetching groups failed: \", error);\n        setError(error.message);\n        setLoading(false); // Set loading to false even when there's an error\n      });\n  }, []);\n\n  // Handle form submission\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Add your form submission logic here\n    console.log(\"Form submitted!\");\n  };\n\n  return (\n    <Container className=\"py-5\">\n      <h1 className=\"text-center mb-4\">Your Groups</h1>\n      \n      {loading ? (\n        <LoadingSpinner /> // Show loading spinner when loading\n      ) : error ? (\n        <div>Error: {error}</div> // Show error message if there's an error\n      ) : (\n        <div>\n          {/* Display groups result */}\n          {groups.map(group => (\n            <p key={group.id}>{group.name}</p> // Replace 'group.id' and 'group.name' with actual properties from your groups data\n          ))}\n        </div>\n      )}\n\n      <Footer />\n    </Container>\n  );\n};\n\nexport default GroupsPage;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,sBAAsB,CAClD,OAASC,SAAS,CAAEC,GAAG,CAAEC,GAAG,CAAEC,IAAI,CAAEC,MAAM,KAAQ,iBAAiB,CACnE,MAAO,CAAAC,MAAM,KAAM,gCAAgC,CACnD,MAAO,CAAAC,cAAc,KAAM,gDAAgD,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5E,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACkB,OAAO,CAAEC,UAAU,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAAE;AAE9CD,SAAS,CAAC,IAAM,CACdE,WAAW,CAAC,CAAC,CACVmB,IAAI,CAAEC,IAAI,EAAK,CACdN,SAAS,CAACM,IAAI,CAAC,CACfF,UAAU,CAAC,KAAK,CAAC,CAAE;AACrB,CAAC,CAAC,CACDG,KAAK,CAAEN,KAAK,EAAK,CAChBO,OAAO,CAACP,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDC,QAAQ,CAACD,KAAK,CAACQ,OAAO,CAAC,CACvBL,UAAU,CAAC,KAAK,CAAC,CAAE;AACrB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAM,YAAY,CAAIC,KAAK,EAAK,CAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB;AACAJ,OAAO,CAACK,GAAG,CAAC,iBAAiB,CAAC,CAChC,CAAC,CAED,mBACEhB,KAAA,CAACV,SAAS,EAAC2B,SAAS,CAAC,MAAM,CAAAC,QAAA,eACzBpB,IAAA,OAAImB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAC,aAAW,CAAI,CAAC,CAEhDZ,OAAO,cACNR,IAAA,CAACF,cAAc,GAAE,CAAE;AAAA,CACjBQ,KAAK,cACPJ,KAAA,QAAAkB,QAAA,EAAK,SAAO,CAACd,KAAK,EAAM,CAAE;AAAA,cAE1BN,IAAA,QAAAoB,QAAA,CAEGhB,MAAM,CAACiB,GAAG,CAACC,KAAK,eACftB,IAAA,MAAAoB,QAAA,CAAmBE,KAAK,CAACC,IAAI,EAArBD,KAAK,CAACE,EAAmB,CAAE;AACpC,CAAC,CACC,CACN,cAEDxB,IAAA,CAACH,MAAM,GAAE,CAAC,EACD,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAM,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}