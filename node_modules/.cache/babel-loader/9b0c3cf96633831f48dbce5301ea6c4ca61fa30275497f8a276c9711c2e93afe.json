{"ast":null,"code":"// apiUtils.js\nconst BASE_URL=\"https://wesplit-backend.glitch.me/api\";// Function to fetch groups\nexport const fetchGroups=async()=>{try{const response=await fetch(\"\".concat(BASE_URL,\"/groups/\"));if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const data=await response.json();return data;// Return the list of groups\n}catch(error){console.error(\"Failed to fetch groups:\",error);// You might want to handle the error differently depending on your app's needs\nthrow error;}};","map":{"version":3,"names":["BASE_URL","fetchGroups","response","fetch","concat","ok","Error","status","data","json","error","console"],"sources":["/Users/sasu/Documents/GitHub/wesplit/src/utils/apiUtils.js"],"sourcesContent":["// apiUtils.js\nconst BASE_URL = \"https://wesplit-backend.glitch.me/api\";\n\n// Function to fetch groups\nexport const fetchGroups = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/groups/`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;  // Return the list of groups\n  } catch (error) {\n    console.error(\"Failed to fetch groups:\", error);\n    // You might want to handle the error differently depending on your app's needs\n    throw error;\n  }\n};"],"mappings":"AAAA;AACA,KAAM,CAAAA,QAAQ,CAAG,uCAAuC,CAExD;AACA,MAAO,MAAM,CAAAC,WAAW,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIJ,QAAQ,YAAU,CAAC,CACnD,GAAI,CAACE,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,wBAAAF,MAAA,CAAwBF,QAAQ,CAACK,MAAM,CAAE,CAAC,CAC3D,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CAAG;AAChB,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C;AACA,KAAM,CAAAA,KAAK,CACb,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}